type file_id = nat64;

type file_metadata = record {
  file_id;
  file_name : text;
};

// A file's contents + its metadata.
type file = record {
  metadata : file_metadata;

  // The contents of the file are available if it has been uploaded.
  contents : opt blob;
};

type user = record {
  first_name: text;
  last_name: text;
};

type who_am_i_response = variant {
  known_user: record { first_name: text; last_name: text };
  unknown_user;
};

type get_alias_info_response = variant {
  not_found;
  found: record {
    file_id: file_id;
    file_name: text;
  }
};

type download_file_response = variant {
  not_found_file;
  not_uploaded_file;
  found_file: blob;
};

type upload_file_response = variant {
  not_requested_file;
  already_uploaded_file;
  upload_ok;
};

service docutrack : {
  hello_world : () -> (text);

  set_user: (first_name: text, last_name: text) -> ();

  who_am_i: () -> (who_am_i_response); 

  // Requests a file to be uploaded.
  // An alias is returned that can be used to create an upload link.
  request_file: (request_name: text) -> (alias: text);

  // Based on the alias (or download link) of the file,
  // it returns the name and id of the file to be uploaded.
  get_alias_info: (alias: text) -> (get_alias_info_response);

  upload_file: (file_id, blob) -> (upload_file_response) ;

  download_file: (file_id) -> (download_file_response) ;

  get_files: () -> (vec file_metadata);
}

